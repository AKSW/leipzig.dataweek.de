version: '3'

vars:
  MODEL_REPO: git@github.com:AKSW/leipzig.dataweek.de-model.git
  GRAPH_FILE: graph
  GRAPH_IRI:
    sh: cat {{.GRAPH_FILE}}.nt.graph || echo none

  GIT_USER_NAME: DataWeek CMEM Update Bot ðŸ¤–
  GIT_USER_EMAIL: dw-cmem-update-bot@example.org
  GIT_COMMIT_MESSAGE: Update from CMEM

  WORKING_DIRECTORY: '{{.github.workspace | default .PWD}}'
  ID_UID:
    sh: id -u
  ID_GID:
    sh: id -g

  JEKYLL_UID: '{{.JEKYLL_UID | default .ID_UID}}'
  JEKYLL_GID: '{{.JEKYLL_GID | default .ID_GID}}'
  JEKYLL_IMAGE: ghcr.io/aksw/jekyll-rdf:4.0.3

  LANGUAGE: '{{.LANGUAGE | default "de"}}'

  TARGET: '{{.TARGET | default "_site"}}'
  TARGET_TMP_DE: '{{.TARGET_DE | default "_tmp/de"}}'
  TARGET_TMP_EN: '{{.TARGET_DE | default "_tmp/en"}}'
  TARGET_DE: '{{.TARGET_DE | default .TARGET}}'
  TARGET_EN: '{{.TARGET_EN | default "_site/en"}}'

tasks:

  default:
    desc: List all tasks
    cmds:
      - task -a

  ci:
    desc: Build tasks for the CI
    cmds:
      - task: sync-data
      - task: track:commit-and-push-data
      - task: build

  sync-data:
    desc: Synchronize the data in the CI
    cmds:
      - task: sync-data:get-graph

  build:
    desc: Build the page locally
    deps:
      - task: build:de
      - task: build:en
    cmds:
      - test -d _site || rm -r _site
      - mv {{.TARGET_TMP_DE}} {{.TARGET_DE}}
      - mv {{.TARGET_TMP_EN}} {{.TARGET_EN}}

  serve:
    desc: Serve the locally built site
    cmds:
      - python -m http.server --directory {{.TARGET}}

  build:de:
    cmds:
      - task: build:docker
        vars:
          LANGUAGE: de
          TARGET: '{{.TARGET_TMP_DE}}'

  build:en:
    cmds:
      - task: build:docker
        vars:
          LANGUAGE: en
          TARGET: '{{.TARGET_TMP_EN}}'

  build:docker:
    - |
      docker run --rm \
      --workdir /github/workspace \
      -v {{.WORKING_DIRECTORY}}:/github/workspace \
      -e TZ=Europe/Berlin -e JEKYLL_UID="{{.JEKYLL_UID}}" -e JEKYLL_GID="{{.JEKYLL_GID}}" -e JEKYLL_LANGUAGE={{.LANGUAGE}} \
      {{.JEKYLL_IMAGE}} jekyll build -d {{.TARGET}}

  sync-data:get-graph:
    deps:
      - sync-data:model-update
    cmds:
      - cp .model/{{.GRAPH_FILE}}.nt {{.GRAPH_FILE}}.nt
      - cp .model/{{.GRAPH_FILE}}.nt.graph {{.GRAPH_FILE}}.nt.graph
      - echo {{.MODEL_REPO}} > {{.GRAPH_FILE}}.nt.source
      - cd .model && git rev-parse HEAD >> ../{{.GRAPH_FILE}}.nt.source

  sync-data:model-update:
    deps:
      - sync-data:model-init
    cmds:
      - cd .model && git pull

  sync-data:model-init:
    cmds:
      - git clone {{.MODEL_REPO}} .model
    status:
      - test -d .model

  track:commit-and-push-data:
    - |
      git add {{.GRAPH_FILE}}.nt {{.GRAPH_FILE}}.nt.graph {{.GRAPH_FILE}}.nt.source
      git -c user.name="{{.GIT_USER_NAME}}" -c user.email="{{.GIT_USER_EMAIL}}" commit -m "{{.GIT_COMMIT_MESSAGE}}" || echo ""
      git push || echo ""
